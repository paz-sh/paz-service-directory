FORMAT: 1A
HOST: http://paz-service-directory.paz

# paz-service-directory
A catalog of your apps.

# Group Service
A service that can be run on the platform as a Docker container.

## Service Collection [/services{?dockerRepository}]

### List services [GET]
Performs a list of all services, or a lookup for a particular service by some parameter. Returns an array if not doing a lookup.

+ Parameters
    + dockerRepository (optional, string) ... Performs a lookup for service by Docker repository. Returns a single document or a 404 (rather than an array).

+ Response 200 (application/json)
Example of listing all services.

    + Body

            [
                {
                    "name": "api-service",
                    "description": "API service for some platform",
                    "dockerRepository": "lukebond/api-service",
                    "config": {
                        "publicFacing": true,
                        "ports": [
                            {
                                "container": 9000,
                                "host": 80
                            }
                        ],
                        "env": {
                          "key": "value"
                        },
                        "numInstances": 1
                    }
                }
            ]

## Service Collection [/services]

### Create a service [POST]
+ Request (application/json)

    + Body

            {
                "name": "my-service",
                "description": "Test service",
                "dockerRepository": "lukebond/my-service",
                "publicFacing": true,
                "ports": [
                    {
                        "container": 9000,
                        "host": 80
                    }
                ],
                "env": {
                  "key": "value"
                },
                "numInstances": 1
            }

+ Response 201 (application/json)

    + Body

            {
                "name": "my-service",
                "description": "Test service",
                "dockerRepository": "lukebond/my-service",
                "config": {
                    "publicFacing": true,
                    "ports": [
                        {
                            "container": 9000,
                            "host": 80
                        }
                    ],
                    "env": {
                        "key": "value"
                    },
                    "numInstances": 1
                }
            }

## Service [/services/{name}]
A single service object.

+ Parameters
    + name (required, string, `my-service`) ... unique of the service.

### Retrieve a service [GET]
+ Response 200 (application/json)

    + Body

            {
                "name": "my-service",
                "description": "Test service",
                "dockerRepository": "lukebond/my-service",
                "config": {
                    "publicFacing": true,
                    "ports": [
                        {
                            "container": 9000,
                            "host": 80
                        }
                    ],
                    "env": {
                        "key": "value"
                    },
                    "numInstances": 1
                }
            }


### Remove a service [DELETE]
+ Response 204

## Service config [/services/{name}/config]
The service config that will be used when the service is next deployed.

### Retrieve service config [GET]
+ Response 200 (application/json)

    + Body

            {
                "publicFacing": true,
                "ports": [
                    {
                        "container": 9000,
                        "host": 80
                    }
                ],
                "env": {
                  "key": "value"
                },
                "numInstances": 1
            }

### Modify service config [PATCH]
+ Request (application/json)

    + Body

            {
                "publicFacing": true,
                "ports": [
                    {
                        "container": 9000,
                        "host": 80
                    }
                ],
                "env": {
                  "key": "value"
                },
                "numInstances": 3
            }

+ Response 200 (application/json)

    + Body

            {
                "publicFacing": true,
                "ports": [
                    {
                        "container": 9000,
                        "host": 80
                    }
                ],
                "env": {
                  "key": "value"
                },
                "numInstances": 3
            }
